<%- include ("../main/header.ejs")%>


<!-- CONTENT -->
<br><br><br><br>
<div class="container">
    <div class="row" style="margin: 0 auto;">
        <a id="back-button" href="/listIdeas" class="btn blue-parkeen-back"><i class="fa fa-arrow-left"></i></a>
        <div id="back-div" class="col-md-2"></div>
        <input class="form-control col-md-7" type="text" id="searchIdea" onkeyup="searchIdea()"
            placeholder="Search by name...">
    </div>
    <br>
    <div class="table-responsive">
        <table class="table" id="table">
            <thead id="tableHeader">

            </thead>
            <tbody id="list">

            </tbody>
        </table>
    </div>
</div>
<!-- /CONTENT -->


<%- include ("../main/footer.ejs")%>

<script>
    
    window.onload = () => {
        const backButton = document.getElementById("back-button");
        const backDiv = document.getElementById("back-div");

        backButton.style.display = "none";
        backDiv.style.display = "none";
        
        selectUserIdeas();
    };
    $(document).ready(function () {
        /*Chamada da função que ativa a side bar.*/
        $('#sidebarCollapse').on('click', function () {
            $('#sidebar').toggleClass('active');
        });
    });
    

    function searchIdea() {
        const input = document.getElementById("searchIdea");
        const filter = input.value.toUpperCase(); 
        const table = document.getElementById("table");
        const tr = table.getElementsByTagName("tr");

        let txtValue;
        let td;

        
        for (let i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[0];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
    
    /**
     * SELECT USER IDEAS:
     * Searches and lists all user's ideas.
     */
    function selectUserIdeas() {

        axios.post("/selectUserIdeas")
            .then(function (response) {
                
                Object.freeze(response);
                
                if (response.data.status == "success") {
                    
                    const ideas = response.data.data;
                    const list = document.getElementById("list");
                    const tableHeader = document.getElementById("tableHeader");
                    console.log(ideas);                    
                    list.innerHTML = "";
                    tableHeader.innerHTML = "";
                    tableHeader.innerHTML = templateHeaderIdea();
                    ideas.forEach(element => {
                        list.innerHTML += templateListIdea(element);
                    });
                } else {
                    
                    let msg = response.data.msg;
                    
                    if (Array.isArray(response.data.msg)) {
                        msg = "";
                        for (const i in response.data.msg) {
                            msg += response.data.msg[i].msg;
                            msg += "\n";
                        }
                    }
                    alert(msg);
                }
            })
            .catch(function (error) {
                /*Tratamento de erro.*/
                alert("ERROR");
                console.log(error);
            });
    }

    /**
     * SELECT FILES:
     * List idea's files for download.
     */
    function selectFiles(idIdea, ideaName, ideaPath) {
        let idea = {
            "idIdea":idIdea,
            "ideaName":ideaName,
            "ideaPath":ideaPath
        };

        const list = document.getElementById("list");
        const tableHeader = document.getElementById("tableHeader");

        const backButton = document.getElementById("back-button");
        const backDiv = document.getElementById("back-div");

        backButton.style.display = "";
        backDiv.style.display = "";

        list.innerHTML = "";
        tableHeader.innerHTML = "";

        tableHeader.innerHTML = templateHeaderFile(ideaName);

        let files = [
            {
                name: idea.ideaName + " (Original Recording)",
                type: "0"
            }, 
            {
                name: idea.ideaName + " (Original midi)",
                type: "1"
            }, 
            {
                name: idea.ideaName + " (Suggestions - Zip)",
                type: "2"
            }
        ];

        files.forEach(element => {
            list.innerHTML += templateListFile(element, idea);
        });
    }

    function downloadFile(link, filename, type) {
        console.log(link);
        axios.get(link, {responseType: 'arraybuffer'})
            .then(function (response) {                
                if(type == 0){
                    console.log("wav")
                    const url = window.URL.createObjectURL(new Blob([response.data]), { type: 'audio/wav' });
                    const link = document.createElement('a');
                    link.href = url;
                    link.setAttribute('download', filename + '.wav');
                    document.body.appendChild(link);
                    link.click();
                    link.remove();
                }
                else{
                    const url = window.URL.createObjectURL(new Blob([response.data]), { type: 'application/zip' });
                    const link = document.createElement('a');
                    link.href = url;
                    link.setAttribute('download', filename + '.zip');
                    document.body.appendChild(link);
                    link.click();
                    link.remove();
                }
            })
            .catch(function (error) {
                /*Tratamento de erro.*/
                alert("ERROR");
                console.log(error);
            });
    }

    function deleteIdea(idIdea, ideaName){
        if(confirm("By deleting idea all content as recording and midi files will be deleted permanently!")){
            axios.post('deleteIdeaWeb', {"idIdeaWeb":idIdea, "name":ideaName})
            .then(function (response) {                
                if (response.data.status == "success") {
                    alert(response.data.msg);
                } else {
                    
                    let msg = response.data.msg;
                    
                    if (Array.isArray(response.data.msg)) {
                        msg = "";
                        for (const i in response.data.msg) {
                            msg += response.data.msg[i].msg;
                            msg += "\n";
                        }
                    }
                    alert(msg);
                    selectUserIdeas();
                }
            })
            .catch(function (error) {
                /*Tratamento de erro.*/
                alert("ERROR");
                console.log(error);
            });
        }
    }

    
    function templateHeaderIdea() {
        // return `
        //         <th>Name</th>
        //         <th style="color: white"></th>
        //         <th style="color: white"></th>
        //         <th></th>
        //         <th></th>
        //     `;
        return `
            <th>Name</th>
            <th style="color: white"></th>
            <th style="color: white"></th>
            <th></th>
            <th></th>
            `;
    }

    function templateListIdea(idea) {
        // return `
        //         <td>${idea.ideaName}</td>
        //         <td style="color: white"></td>
        //         <td style="color: white"></td>
        //         <td>
        //             <i class="btn fas fa-search btn-primary" onClick="selectFiles(${idea.idIdea},'${idea.ideaName}','${idea.ideaPath}')"></i>
        //         </td>
        //         <td>
        //             <i class="btn fas fa-trash btn-danger" onClick=""></i>
        //         </td>
        //     `;
        if(idea.ideaSource == 1){
            return `
                <td>${idea.ideaName}</td>
                <td style="color: white"></td>
                <td style="color: white"></td>
                <td>
                    <i class="btn fas fa-search blue-parkeen-back" onClick="selectFiles(${idea.idIdea},'${idea.ideaName}','${idea.ideaPath}')"></i>
                </td>
                <td>
                    <i class="btn fas fa-trash btn-danger" disabled></i>
                </td>
            `;
        }
        if(idea.ideaSource == 2){
            return `
                <td>${idea.ideaName}</td>
                <td style="color: white"></td>
                <td style="color: white"></td>
                <td>
                    <i class="btn fas fa-search blue-parkeen-back" onClick="selectFiles(${idea.idIdea},'${idea.ideaName}','${idea.ideaPath}')"></i>
                </td>
                <td>
                    <i class="btn fas fa-trash btn-danger" onClick="deleteIdea(${idea.idIdea},'${idea.ideaName}')"></i>
                </td>
            `;
        }
    }


    function templateHeaderFile(ideaName) {
        return `
                <th>File (${ideaName})</th>
                <th style="color: white"></th>
                <th style="color: white"></th>
                <th></th>
            `;
    }

    function templateListFile(file, idea) {
        let downloadLink = "/downLoadUserFile?file=" + idea.ideaPath + "&type=" + file.type + "&idIdea=" + idea.idIdea;
        return `
                <td>${file.name}</td>
                <td style="color: white"></td>
                <td style="color: white"></td>
                <td>
                    <i class="btn fas fa-download blue-parkeen-back" onClick="downloadFile('${downloadLink}','${file.name}',${file.type})"></i>
                </td>
            `;
    }
    
</script>

</html>