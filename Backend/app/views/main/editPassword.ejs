<%include header.ejs%>
<link rel="stylesheet" type="text/css" href="css/common/customForm.css">

<!-- CONTENT -->
<div class="container">

    <br><br>

    <div class="divCenter">
        <h3>Mudando Minha Senha &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h3>
        <br>
        <form action="javascript:updatePassword()" method="POST">

            <div class="form-group">
                <label><i class="fas fa-unlock-alt"></i> Senha Atual</label>
                <input type="password" name="oldPassword" id="oldPassword" class="form-control" minlength="8" maxlength="32" required>
            </div>

            <div class="form-group">
                <label><i class="fas fa-key"></i> Nova Senha</label>
                <input type="password" name="newPassword" id="newPassword" class="form-control" minlength="8" maxlength="32" required>
            </div>

            <div class="form-group">
                <label><i class="fas fa-key"></i> Confirmação da Nova Senha</label>
                <input type="password" name="confirmNewPassword" id="confirmNewPassword" class="form-control" minlength="8" maxlength="32" required>
            </div>

            <button class="btn btn-primary btnLeft" type="submit">Salvar</button>
        </form>
    </div>

    <br>
    <br>
</div>
<!-- /CONTENT -->

<%include footer.ejs%>

<script>
/*============================================================================*/
    /**
     * =======================================================
     * |Função responsável executar todas as rotinas iniciais|
     * |da página assim que ela é carregada.                 |
     * =======================================================
     */
    window.onload = () => {
        /*Chamada da função que busca as permissões do usuário.*/
        getPermissions("Mudar Minha Senha", "fa-key");
    };
    $(document).ready(function () {

        /*Chamada da função que ativa a side bar.*/
        $('#sidebarCollapse').on('click', function () {
            $('#sidebar').toggleClass('active');
        });
        
    });
/*============================================================================*/

/*============================================================================*/
    /**
     * ========================================================
     * |Função responsável por tratar os dados do formulário e|
     * |realizar o envio dos dados para o servidor cadastrar  |
     * |um novo usuário.                                      |
     * ========================================================
     */
    function updatePassword() {

        const payload = {
            oldPassword       : document.getElementById("oldPassword").value,       /*Variável que contém a senha atual do usuário.*/
            newPassword       : document.getElementById("newPassword").value,       /*Variável que contém a nova senha do usuário.*/
            confirmNewPassword: document.getElementById("confirmNewPassword").value /*Variável que contém a confirmação da nova senha do usuário.*/
        }

        /*Verificação da senha do usuário.*/
        if(payload.oldPassword == null || payload.oldPassword == undefined || payload.oldPassword == "" || payload.oldPassword.toString().length > 32 || payload.oldPassword.toString().length < 8) {
            alert("Senha Atual do usuário inválida!");
            return;
        }

        /*Verificação da confirmção da senha do usuário.*/
        if(payload.newPassword == null || payload.newPassword == undefined || payload.newPassword == "" || payload.newPassword.toString().length > 32 || payload.newPassword.toString().length < 8) {
            alert("Confirmação da nova senha do usuário inválida!");
            return;
        }

        /*Verificação se as senhas do usuário conferem.*/
        if(payload.newPassword != payload.confirmNewPassword) {
            alert("Nova Senha e Confirmação da nova senha estão diferentes!");
            return;
        }

        /*Chamada da função que torna o objeto user imutável.*/
		Object.freeze(payload);

        /**
         * Chamada axios para a rota insertUser para inserir um novo usuário no sistema.
         */
        axios.post("/updatePassword", payload)
            .then((response) => {
                /*Chamada da função que torna o objeto user imutável.*/
		        Object.freeze(response);
                /* Tratamento do retorno.*/
                if (response.data.status == "success") {
                    /*Alerta o usuário com a mensagem do servidor.*/
                    alert(response.data.msg);
                    window.location.href = "/home"
                }
                else{
                    /*Atribuição da mensagem de retorno do servidor.*/
                    let msg = response.data.msg;
                    /*Verificação se foi enviada mais de uma mensagem.*/
                    if(Array.isArray(response.data.msg)) {
                        /*Atribuição de string vazia a variável.*/
                        msg = "";
                        /*Loop responsável por concatenar todas as mensagens enviadas.*/
                        for (const i in response.data.msg) {
                            msg += response.data.msg[i].msg;
                            msg += "\n";
                        }
                    } 
                    /*Alertar o usuario, caso tenha ocorrido algum erro no servidor*/
                    alert(msg);
                }
            })
            .catch((error) => {
                /*Tratamento de erro.*/
                alert("ERROR");
                console.log(error);
            });
    }
/*============================================================================*/
</script>

</html>